import { TableCardBody } from "../../../../common/card/TableCardBody";
import { DisplayValue } from "../../../../common/DisplayValue";
import { Card } from "../../../../common/governance/Card";
import { AddressWithContext } from "../../../../common/program/AddressWithContext";
export const DAOConfigRenderer = ({ config, addresses: { govWallet, gov, locker }, }) => {
    return (React.createElement("div", { tw: "flex flex-col gap-4" },
        React.createElement(Card, { title: "Addresses" },
            React.createElement(TableCardBody, null,
                React.createElement("tr", null,
                    React.createElement("td", null, "Executive Council"),
                    React.createElement("td", null,
                        React.createElement(AddressWithContext, { pubkey: config.executiveCouncil }))),
                React.createElement("tr", null,
                    React.createElement("td", null, "Emergency DAO"),
                    React.createElement("td", null,
                        React.createElement(AddressWithContext, { pubkey: config.emergencyDao }))),
                React.createElement("tr", null,
                    React.createElement("td", null, "Governor Smart Wallet"),
                    React.createElement("td", null, govWallet ? React.createElement(AddressWithContext, { pubkey: govWallet }) : "--")),
                React.createElement("tr", null,
                    React.createElement("td", null, "Governor"),
                    React.createElement("td", null, gov ? React.createElement(AddressWithContext, { pubkey: gov }) : "--")),
                React.createElement("tr", null,
                    React.createElement("td", null, "Locker"),
                    React.createElement("td", null, locker ? React.createElement(AddressWithContext, { pubkey: locker }) : "--")))),
        React.createElement(Card, { title: "Locker" },
            React.createElement(TableCardBody, null,
                React.createElement("tr", null,
                    React.createElement("td", null, "Max Stake Vote Multiplier"),
                    React.createElement("td", null, config.locker.maxStakeVoteMultiplier)),
                React.createElement("tr", null,
                    React.createElement("td", null, "Min Stake Duration"),
                    React.createElement("td", null, config.locker.minStakeDuration)),
                React.createElement("tr", null,
                    React.createElement("td", null, "Max Stake Duration"),
                    React.createElement("td", null, config.locker.maxStakeDuration)),
                React.createElement("tr", null,
                    React.createElement("td", null, "Proposal Activation Min Votes"),
                    React.createElement("td", null, config.locker.proposalActivationMinVotes)),
                React.createElement("tr", null,
                    React.createElement("td", null, "Whitelist Enabled"),
                    React.createElement("td", null,
                        React.createElement(DisplayValue, { value: config.locker.whitelistEnabled }))))),
        React.createElement(Card, { title: "Governor" },
            React.createElement(TableCardBody, null,
                React.createElement("tr", null,
                    React.createElement("td", null, "Quorum Votes"),
                    React.createElement("td", null, config.governor.quorumVotes)),
                React.createElement("tr", null,
                    React.createElement("td", null, "Token"),
                    React.createElement("td", null,
                        React.createElement(DisplayValue, { value: config.governor.token }))),
                React.createElement("tr", null,
                    React.createElement("td", null, "Voting Delay"),
                    React.createElement("td", null,
                        React.createElement(DisplayValue, { value: config.governor.votingDelay }))),
                React.createElement("tr", null,
                    React.createElement("td", null, "Timelock Delay"),
                    React.createElement("td", null,
                        React.createElement(DisplayValue, { value: config.governor.timelockDelay })))))));
};
